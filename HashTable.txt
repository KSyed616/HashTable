#include <stdio.h>
#include <string.h>

#define HASH_TABLE_SIZE 1057
typedef struct Entry Entry, *EntryPtr;
struct Entry {
  char * string;
  int count;
};
Entry hash_table[HASH_TABLE_SIZE];

void setCount(){
	int i;
	for (i=0; i<HASH_TABLE_SIZE; i++)
	{
		hash_table[i].count=0;
	}
}
int search(char *tag){
	int i, key;
	int sum = 0;
	
	int len = strlen(tag);
	
	for(i = 0; i<len; i++){
		sum+=tag[i];
	}
	
	key = sum % HASH_TABLE_SIZE;
	return key;
}

void add(char * tag)
{
	int key = search(tag);
	if(hash_table[key].string != NULL){
		if(strcmp(hash_table[key].string, tag) == 0){
			hash_table[key].count++;
		}
		else{
			key++;
			
			if(hash_table[key].string != NULL){
				if(strcmp(hash_table[key].string, tag) == 0){
					hash_table[key].count++;
				}
			}
		}
	}
	
	if(hash_table[key].string == NULL){
		hash_table[key].string = tag;
		hash_table[key].count++;
	}
}

void print(){
	int i;
	
	for(i = 0; i<HASH_TABLE_SIZE; i++){
		if(hash_table[i].count!= 0){
			printf("%s %d \n", hash_table[i].string, hash_table[i].count);
		}
	}
}
